{"/home/travis/build/npmtest/node-npmtest-baudio/test.js":"/* istanbul instrument in package npmtest_baudio */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-baudio/lib.npmtest_baudio.js":"/* istanbul instrument in package npmtest_baudio */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_baudio = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_baudio = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-baudio/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-baudio && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_baudio */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_baudio\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_baudio.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_baudio.rollup.js'] =\n            local.assetsDict['/assets.npmtest_baudio.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_baudio.__dirname + '/lib.npmtest_baudio.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-baudio/node_modules/baudio/index.js":"var inherits = require('inherits');\nvar Readable = require('readable-stream').Readable;\nvar spawn = require('child_process').spawn;\nvar nextTick = typeof setImmediate !== 'undefined'\n    ? setImmediate : process.nextTick\n;\n\nmodule.exports = function (opts, fn) {\n    if (typeof opts === 'function') {\n        fn = opts;\n        opts = {};\n    }\n    if (!opts) opts = {};\n    var b = new B (opts, fn);\n    return b;\n};\n\nfunction B (opts, fn) {\n    Readable.call(this);\n    \n    this.readable = true;\n    this.rate = opts.rate || 44000;\n    this._fn = fn;\n    \n    this.t = 0;\n    this.i = 0;\n    \n    this._ticks = 0;\n}\n\ninherits(B, Readable);\n\nB.prototype._read = function read (bytes) {\n    if (!bytes) bytes = 4096;\n    var self = this;\n    \n    var buf = new Buffer(Math.floor(bytes));\n    function clamp (x) {\n        return Math.max(Math.min(x, Math.pow(2,15)-1), -Math.pow(2,15));\n    }\n    \n    for (var i = 0; i < buf.length; i += 2) {\n        var t = self.t + Math.floor(i / 2) / self.rate;\n        var counter = self.i + Math.floor(i / 2);\n        \n        var n = this._fn.call(self, t, counter);\n        if (isNaN(n)) n = 0;\n        buf.writeInt16LE(clamp(signed(n)), i);\n    }\n    \n    self.i += buf.length / 2;\n    self.t += buf.length / 2 / self.rate;\n    \n    self._ticks ++;\n    if (!self._ended && self._ticks % 50) this.push(buf);\n    else if (!self._ended) nextTick(function () { self.push(buf) });\n};\n\nB.prototype.end = function () {\n    this._ended = true;\n    Readable.prototype.push.call(this, null);\n};\n\nfunction mergeArgs (opts, args) {\n    Object.keys(opts || {}).forEach(function (key) {\n        args[key] = opts[key];\n    });\n    \n    return Object.keys(args).reduce(function (acc, key) {\n        var dash = key.length === 1 ? '-' : '--';\n        return acc.concat(dash + key, args[key]);\n    }, []);\n}\n\nB.prototype.play = function (opts) {\n    var ps = this._spawn('play', mergeArgs(opts, {\n        'c': 1,\n        'r': this.rate,\n        't': 's16'\n    }).concat('-', '-q'));\n    this.pipe(ps.stdin);\n    return ps;\n};\n\nB.prototype.record = function (file, opts) {\n    var ps = this._spawn('sox', mergeArgs(opts, {\n        'c' : 1,\n        'r' : this.rate,\n        't' : 's16',\n    }).concat('-', '-q', '-o', file));\n    \n    this.pipe(ps.stdin);\n    return ps;\n};\n\nB.prototype._spawn = function (cmd, args) {\n    var self = this;\n    var ps = spawn(cmd, args);\n    ps.on('error', function (err) {\n        if (err.code === 'ENOENT') {\n            self.emit('error', new Error(\n                'Failed to launch the `' + cmd + '` command.\\n'\n                + 'Make sure you have sox installed:\\n\\n'\n                + '  http://sox.sourceforge.net\\n'\n            ));\n        }\n        else self.emit('error', err);\n    });\n    ps.stdin.on('error', function () {});\n    return ps;\n};\n\nfunction signed (n) {\n    if (isNaN(n)) return 0;\n    var b = Math.pow(2, 15);\n    return n > 0\n        ? Math.min(b - 1, Math.floor((b * n) - 1))\n        : Math.max(-b, Math.ceil((b * n) - 1))\n    ;\n}\n","/home/travis/build/npmtest/node-npmtest-baudio/node_modules/baudio/browser.js":"var au = new Audio;\nau.mozSetup(2, 44100);\nvar xs = new Float32Array(1024);\n\nfor (var i = 0; i < 1024 * 1000; i++) {\n    xs[i % 1024] = Math.sin(i / 44100 * Math.PI * 2 * 400);\n    if ((i+1) % 1024 === 0) au.mozWriteAudio(xs);\n}\n","/home/travis/build/npmtest/node-npmtest-baudio/node_modules/baudio/bin/cmd.js":"#!/usr/bin/env node\nvar path = require('path');\nvar fs = require('fs');\nvar vm = require('vm');\nvar minimist = require('minimist');\nvar parseDuration = require('parse-duration');\nvar concat = require('concat-stream');\nvar check = require('syntax-error');\nvar resolve = require('resolve');\nvar baudio = require('../');\n\nvar argv = minimist(process.argv.slice(2), {\n    alias: {\n        i: 'infile', d: 'duration', t: 'offset', f: 'fade',\n        r: 'rate'\n    }\n});\nvar file = argv.i || argv._[0];\n\nif (argv.h || argv.help) usage(0);\nelse if (!file) {\n    process.stdin.pipe(concat(function (body) {\n        fromSource(body.toString('utf8'));\n    }));\n}\nelse fromSource(fs.readFileSync(file, 'utf8'));\n\nfunction fromSource (src) {\n    var ctx = {\n        Buffer: Buffer,\n        console: console,\n        require: function (m) {\n            return require(resolve.sync(m, {\n                basedir: path.dirname(file)\n            }));\n        }\n    };\n    var err = check(src, file || '[stdin]');\n    if (err) {\n        console.error(err);\n        return process.exit(1);\n    }\n    \n    var fn = vm.runInNewContext('(function(){'+src+'})()', ctx);\n    if (typeof fn !== 'function') {\n        console.error('source code return value was not a function.');\n        console.error('expected: function, actual: ' + typeof fn);\n        return process.exit(1);\n    }\n    \n    var duration = /^(\\.\\d+|\\d+|\\d+\\.\\d*)$/.test(argv.d)\n        ? parseFloat(argv.d) * 1000\n        : parseDuration(argv.d || '0')\n    ;\n    var fade = /^(\\.\\d+|\\d+|\\d+\\.\\d*)$/.test(argv.f)\n        ? parseFloat(argv.f) * 1000\n        : parseDuration(argv.f || '0')\n    ;\n    var offset = /^(\\.\\d+|\\d+|\\d+\\.\\d*)$/.test(argv.t)\n        ? parseFloat(argv.t) * 1000\n        : parseDuration(argv.t || '0')\n    ;\n    var opts = { rate: argv.rate };\n    if (opts.rate) opts.rate = String(opts.rate).replace(/k$/i, '000');\n    if (opts.rate) opts.rate = String(opts.rate).replace(/hz$/i, '');\n    \n    var b = baudio(opts, function (t, i) {\n        if (duration && t * 1000 >= duration) b.end()\n        t += offset;\n        var res = fn(t, i);\n        if (fade && duration - t * 1000 <= fade) {\n            res *= Math.max(0, (duration - t * 1000) / fade);\n        }\n        return res;\n    });\n    b.on('error', function (err) {\n        console.error(err.message || err);\n        process.exit(1);\n    });\n    \n    if (argv.o === '-') b.pipe(process.stdout)\n    else if (argv.o) b.record(argv.o)\n    else b.play()\n}\n\nfunction usage (code) {\n    var s = fs.createReadStream(__dirname + '/usage.txt');\n    s.pipe(code ? process.stderr : process.stdout);\n    s.on('end', function () {\n        if (code) process.exit(code);\n    });\n}\n"}